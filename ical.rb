require 'icalendar'

ICS_BLOBS = [
    "QkVHSU46VkNBTEVOREFSDQpQUk9ESUQ6LS8vR29vZ2xlIEluYy8vR29vZ2xlIENhbGVuZGFyIDcwLjkwNTQvL0VODQpWRVJTSU9OOjIuMA0KQ0FMU0NBTEU6R1JFR09SSUFODQpNRVRIT0Q6UkVRVUVTVA0KQkVHSU46VkVWRU5UDQpEVFNUQVJUOjIwMjIwNjI0VDIzMDAwMFoNCkRURU5EOjIwMjIwNjI1VDAwMzAwMFoNCkRUU1RBTVA6MjAyMjA2MjJUMTg0MjExWg0KT1JHQU5JWkVSO0NOPUVUSE5ld1lvcmsgMjAyMjptYWlsdG86Y18zM2p0N29jOXJmZ2wyZTNxZHQ4ZzVkMW90b0Bncm91cC5jYWxlDQogbmRhci5nb29nbGUuY29tDQpVSUQ6MWo2ZHNyNjg3MTR2M3NscGZoajgzdW83aGlAZ29vZ2xlLmNvbQ0KQVRURU5ERUU7Q1VUWVBFPUlORElWSURVQUw7Uk9MRT1SRVEtUEFSVElDSVBBTlQ7UEFSVFNUQVQ9TkVFRFMtQUNUSU9OO1JTVlA9DQogVFJVRTtDTj1hbGVjYmVuemVyQGdtYWlsLmNvbTtYLU5VTS1HVUVTVFM9MDptYWlsdG86YWxlY2JlbnplckBnbWFpbC5jb20NClgtTUlDUk9TT0ZULUNETy1PV05FUkFQUFRJRDotNDk0NTM0NTI1DQpDUkVBVEVEOjIwMjIwNjEzVDExNTY1MFoNCkRFU0NSSVBUSU9OOjxodG1sLWJsb2I+PHU+PC91PkRlc2NyaXB0aW9uOiBXZSBjYW4ndCB3YWl0IGZvciA8Yj5FVEhOZXdZb3JrJg0KIG5ic3BcOzwvYj50byBzdGFydCB0aGlzIEZyaWRheSE8YnI+PGJyPuKGkiZuYnNwXDsmbmJzcFw7Jm5ic3BcO0pvaW4gdXMgYXQmbmJzDQogcFw7PGI+PGEgaHJlZj0iaHR0cDovL2V0aGdsb2JhbC50diI+PHU+PHU+ZXRoZ2xvYmFsLnR2PC91PjwvdT48L2E+PGJyPjxicj48DQogL2I+PGJyPjxiPkFnZW5kYSAmYW1wXDsgTG9naXN0aWNzIE92ZXJ2aWV3OjwvYj48dWw+PGxpPjxwPjE5OjAwIC0gMTk6MzAgRVQgDQog4oaSIEV2ZW50IExvZ2lzdGljczxiPiB3LyBLYXJ0aWsgVGFsd2FyPC9iPjwvcD48L2xpPjxsaT48cD4xOTozMCAtIDIwOjAwIEVUIOKGkg0KICBLZXlub3RlIFRhbGsgPGI+dy8gS2FybCBGbG9lcnNjaCBhbmQgSGF5ZGVuIEFkYW1zPC9iPjxicj48YnI+PC9wPjwvbGk+PC91bA0KID5DaGVjayBvdXQgdGhlIDxiPjxhIGhyZWY9Imh0dHBzOi8vd3d3Lm5vdGlvbi5zby9ldGhnbG9iYWwvRVRITmV3WW9yay1JbmZvLQ0KIENlbnRlci03NWNhMzFlZjEyYWU0ZDkyYTQzMjk5MDEyMGI5YjJkMyI+PHU+PHU+SW5mbyBDZW50ZXI8L3U+PC91PjwvYT48L2I+Jg0KIG5ic3BcO2ZvciBtb3JlIEluZm9ybWF0aW9uIG9uIHRoZSBldmVudCE8YnI+PGJyPlNlZSB0aGUgZnVsbCBzY2hlZHVsZSBvbiA8Yg0KID48YSBocmVmPSJodHRwczovL255Yy5ldGhnbG9iYWwuY29tLyNzY2hlZHVsZSI+bmV3eW9yay5ldGhnbG9iYWwuY29tL3NjaGVkdQ0KIGxlPC9hPjwvYj48YnI+PGJyPjxicj48aT5+IE9mZmljaWFsJm5ic3BcOzwvaT48aT5FVEhBbXN0ZXJkYW08L2k+PGk+Jm5ic3BcOw0KIEV2ZW50IH4mbmJzcFw7Jm5ic3BcOzwvaT48dT48L3U+PC9odG1sLWJsb2I+XG5cbi06On46fjo6fjp+On46fjp+On46fjp+On46fg0KIDp+On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+On46On46fjo6LVxuRG8gbm90IGVkaXQgdA0KIGhpcyBzZWN0aW9uIG9mIHRoZSBkZXNjcmlwdGlvbi5cblxuVmlldyB5b3VyIGV2ZW50IGF0IGh0dHBzOi8vY2FsZW5kYXIuZ29vZw0KIGxlLmNvbS9jYWxlbmRhci9ldmVudD9hY3Rpb249VklFVyZlaWQ9TVdvMlpITnlOamczTVRSMk0zTnNjR1pvYWpnemRXODNhR2tnWQ0KIFd4bFkySmxibnBsY2tCdCZ0b2s9TlRRalkxOHpNMnAwTjI5ak9YSm1aMnd5WlROeFpIUTRaelZrTVc5MGIwQm5jbTkxY0M1allXeA0KIGxibVJoY2k1bmIyOW5iR1V1WTI5dFpUUmlNalptTWpnMlptTm1NakEyWkRaak5XWTFaamN3WW1SaFlXWTVZMkUxWmpoaU4yWXdZdw0KICZjdHo9QW1lcmljYSUyRk5ld19Zb3JrJmhsPWVuJmVzPTEuXG4tOjp+On46On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+Og0KIH46fjp+On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+Ojp+On46Oi0NCkxBU1QtTU9ESUZJRUQ6MjAyMjA2MjJUMTg0MTM3Wg0KTE9DQVRJT046TWV0cm9wb2xpdGFuIFBhdmlsaW9uXCwgMTI1IFcgMTh0aCBTdFwsIE5ldyBZb3JrXCwgTlkgMTAwMTFcLCBVU0ENClNFUVVFTkNFOjANClNUQVRVUzpDT05GSVJNRUQNClNVTU1BUlk68J+XvSBFVEhOZXdZb3JrIEtpY2tvZmYgRXZlbnQNClRSQU5TUDpPUEFRVUUNCkVORDpWRVZFTlQNCkVORDpWQ0FMRU5EQVINCg==",
    "QkVHSU46VkNBTEVOREFSDQpQUk9ESUQ6LS8vR29vZ2xlIEluYy8vR29vZ2xlIENhbGVuZGFyIDcwLjkwNTQvL0VODQpWRVJTSU9OOjIuMA0KQ0FMU0NBTEU6R1JFR09SSUFODQpNRVRIT0Q6UkVRVUVTVA0KQkVHSU46VkVWRU5UDQpEVFNUQVJUOjIwMjIwNjI1VDAzMzAwMFoNCkRURU5EOjIwMjIwNjI1VDA0MzAwMFoNCkRUU1RBTVA6MjAyMjA2MjJUMTg0NDI1Wg0KT1JHQU5JWkVSO0NOPUVUSE5ld1lvcmsgMjAyMjptYWlsdG86Y18zM2p0N29jOXJmZ2wyZTNxZHQ4ZzVkMW90b0Bncm91cC5jYWxlDQogbmRhci5nb29nbGUuY29tDQpVSUQ6MmJkYWttM2FiczhjNjlnYWxzcW01aGd1OWVAZ29vZ2xlLmNvbQ0KQVRURU5ERUU7Q1VUWVBFPUlORElWSURVQUw7Uk9MRT1SRVEtUEFSVElDSVBBTlQ7UEFSVFNUQVQ9TkVFRFMtQUNUSU9OO1JTVlA9DQogVFJVRTtDTj1hbGVjYmVuemVyQGdtYWlsLmNvbTtYLU5VTS1HVUVTVFM9MDptYWlsdG86YWxlY2JlbnplckBnbWFpbC5jb20NClgtTUlDUk9TT0ZULUNETy1PV05FUkFQUFRJRDoxMjE2MjQ2NjU1DQpDUkVBVEVEOjIwMjIwNjEzVDExNTk0MloNCkRFU0NSSVBUSU9OOi06On46fjo6fjp+On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+On46fg0KIDp+On46fjp+On46fjp+On46On46fjo6LVxuRG8gbm90IGVkaXQgdGhpcyBzZWN0aW9uIG9mIHRoZSBkZXNjcmlwdGlvbi5cblxuVg0KIGlldyB5b3VyIGV2ZW50IGF0IGh0dHBzOi8vY2FsZW5kYXIuZ29vZ2xlLmNvbS9jYWxlbmRhci9ldmVudD9hY3Rpb249VklFVyZlaQ0KIGQ9TW1Ka1lXdHRNMkZpY3poak5qbG5ZV3h6Y1cwMWFHZDFPV1VnWVd4bFkySmxibnBsY2tCdCZ0b2s9TlRRalkxOHpNMnAwTjI5ag0KIE9YSm1aMnd5WlROeFpIUTRaelZrTVc5MGIwQm5jbTkxY0M1allXeGxibVJoY2k1bmIyOW5iR1V1WTI5dFlqUXhOakkxWVRReU9HSg0KIGpNekEwWlRRMk5tVm1aakkwTm1GaU1HWTRaRGRtTldGa05UZzBNZyZjdHo9QW1lcmljYSUyRk5ld19Zb3JrJmhsPWVuJmVzPTEuXA0KIG4tOjp+On46On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+Og0KIH46fjp+Ojp+On46Oi0NCkxBU1QtTU9ESUZJRUQ6MjAyMjA2MjJUMTg0MjQ4Wg0KTE9DQVRJT046TWFpbiBIYWxsIC0gTWV0cm9wb2xpdGFuIFBhdmlsaW9uXCwgMTI1IFcgMTh0aCBTdFwsIE5ldyBZb3JrXCwgTlkgDQogMTAwMTFcLCBVU0ENClNFUVVFTkNFOjANClNUQVRVUzpDT05GSVJNRUQNClNVTU1BUlk68J+NqyBNaWRuaWdodCBTbmFjaw0KVFJBTlNQOk9QQVFVRQ0KRU5EOlZFVkVOVA0KRU5EOlZDQUxFTkRBUg0K",
    "QkVHSU46VkNBTEVOREFSDQpQUk9ESUQ6LS8vR29vZ2xlIEluYy8vR29vZ2xlIENhbGVuZGFyIDcwLjkwNTQvL0VODQpWRVJTSU9OOjIuMA0KQ0FMU0NBTEU6R1JFR09SSUFODQpNRVRIT0Q6UkVRVUVTVA0KQkVHSU46VkVWRU5UDQpEVFNUQVJUOjIwMjIwNjI0VDIyMDAwMFoNCkRURU5EOjIwMjIwNjI0VDIzMzAwMFoNCkRUU1RBTVA6MjAyMjA2MjJUMTg0MTEwWg0KT1JHQU5JWkVSO0NOPUVUSE5ld1lvcmsgMjAyMjptYWlsdG86Y18zM2p0N29jOXJmZ2wyZTNxZHQ4ZzVkMW90b0Bncm91cC5jYWxlDQogbmRhci5nb29nbGUuY29tDQpVSUQ6NGkxbXZldTh2Z2RrNXVsMXRvZGY4cjduMXBAZ29vZ2xlLmNvbQ0KQVRURU5ERUU7Q1VUWVBFPUlORElWSURVQUw7Uk9MRT1SRVEtUEFSVElDSVBBTlQ7UEFSVFNUQVQ9TkVFRFMtQUNUSU9OO1JTVlA9DQogVFJVRTtDTj1hbGVjYmVuemVyQGdtYWlsLmNvbTtYLU5VTS1HVUVTVFM9MDptYWlsdG86YWxlY2JlbnplckBnbWFpbC5jb20NClgtTUlDUk9TT0ZULUNETy1PV05FUkFQUFRJRDotMTE3NjA0MTAxNg0KQ1JFQVRFRDoyMDIyMDYxM1QxMTU3NTBaDQpERVNDUklQVElPTjotOjp+On46On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+On4NCiA6fjp+On46fjp+On46fjp+Ojp+On46Oi1cbkRvIG5vdCBlZGl0IHRoaXMgc2VjdGlvbiBvZiB0aGUgZGVzY3JpcHRpb24uXG5cblYNCiBpZXcgeW91ciBldmVudCBhdCBodHRwczovL2NhbGVuZGFyLmdvb2dsZS5jb20vY2FsZW5kYXIvZXZlbnQ/YWN0aW9uPVZJRVcmZWkNCiBkPU5Ha3hiWFpsZFRoMloyUnJOWFZzTVhSdlpHWTRjamR1TVhBZ1lXeGxZMkpsYm5wbGNrQnQmdG9rPU5UUWpZMTh6TTJwME4yOWoNCiBPWEptWjJ3eVpUTnhaSFE0WnpWa01XOTBiMEJuY205MWNDNWpZV3hsYm1SaGNpNW5iMjluYkdVdVkyOXRaVEZsTkRVMVptRTJaR00NCiB5TldZM09Ua3daV1JrTm1Nek1XVmxNVFppTlRkbE1EQTFPVE0wTVEmY3R6PUFtZXJpY2ElMkZOZXdfWW9yayZobD1lbiZlcz0xLlwNCiBuLTo6fjp+Ojp+On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+On46fjp+On46fjoNCiB+On46fjo6fjp+OjotDQpMQVNULU1PRElGSUVEOjIwMjIwNjIyVDE4NDEwMloNCkxPQ0FUSU9OOk1haW4gSGFsbCAtIE1ldHJvcG9saXRhbiBQYXZpbGlvblwsIDEyNSBXIDE4dGggU3RcLCBOZXcgWW9ya1wsIE5ZIA0KIDEwMDExXCwgVVNBDQpTRVFVRU5DRTowDQpTVEFUVVM6Q09ORklSTUVEDQpTVU1NQVJZOvCfjK4gRGlubmVyDQpUUkFOU1A6T1BBUVVFDQpFTkQ6VkVWRU5UDQpFTkQ6VkNBTEVOREFSDQo=",
]


def get_events(blob)
    cals = from_ics_base64(blob)
    cals.map {|cal| cal.events}.flatten
end

def merge_events(events)
    cal = Icalendar::Calendar.new
    events.each {|event| cal.add_event(event)}
    cal
end

def from_ics_base64(blob_base64)
    Icalendar::Calendar.parse(Base64.decode64(blob_base64).force_encoding("utf-8"))
end

def merged_feed
    cal = merge_events(ICS_BLOBS.map {|blob| get_events(blob)}.flatten)
    cal.publish # ??
    cal.to_ical
end